#include "Common.ds"

#define OUTPUT_PATCH_SIZE 4
#define DOMAIN "quad"

struct HSOutput
{
    float3 position : POSITION;
    float3 normal : TEXCOORD0;
    //float2 uv : TEXCOORD1;
};

struct HSConstantOutput
{
    float edgeFactor[4] : SV_TessFactor;
    float insideFactor[2] : SV_InsideTessFactor;
};

struct DSOutput
{
    float4 position : SV_POSITION;
    float3 normal : TEXCOORD0;
    //float2 uv : TEXCOORD1;
    float3 worldPos : TEXCOORD1;
};

[domain(DOMAIN)]
DSOutput main(HSConstantOutput hsConstant, const OutputPatch<HSOutput, OUTPUT_PATCH_SIZE> patches, float2 uv : SV_DomainLocation)
{
    float3 p0 = lerp(patches[0].position, patches[1].position, uv.x);
    float3 p1 = lerp(patches[3].position, patches[2].position, uv.x);
    float3 n0 = lerp(patches[0].normal, patches[1].normal, uv.x);
    float3 n1 = lerp(patches[3].normal, patches[2].normal, uv.x);
 
    float4 position = float4(lerp(p0, p1, uv.y), 1);
    float3 normal = lerp(n0, n1, uv.y);

    DSOutput output= (DSOutput)0;
    output.position = mul(position, mvp1);
    output.normal = normal;
    //output.uv = uv;

    output.worldPos = position.xyz;
    return output;
}
