#include "Common.ps"

Texture2D<float3> gbuffNormal : register(t2);
Texture2D<float> gbuffDepth : register(t4);

struct VSOutput
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};

float4 main(VSOutput input) : SV_TARGET0
{
    float2 uv = input.tex;
    uint2 location = uv*screenSize;

    float3 normal = decodeNormal(gbuffNormal[location]);
    float depth = gbuffDepth[location];
    float3 N = normal.xyz;
    float3 L = shadowMapLightDir.xyz;

    float3 screen;
    screen.xy = uv * float2(2.0,-2.0) + float2(-1.0,1.0);
    screen.z = depth;
    float4 worldPos;
    worldPos.xyz = screenToWorld(screen, minvvp1);
    worldPos.w = 1;

    float4 color;
    color.rgb = calcShadowInfluence(texShadow, worldPos, N, L, mlvp);
    color.a = 1;
    return color;
}
