#include "Common.scs"

Texture2D<float4> texDepthNormal : register(t0);
Texture2D<float2> texVelocity : register(t1);
RWTexture2D<float2> texFullVelocity : register(u0);

float2 sampleVelocity(in float2 uv)
{
    float4 v0 = texVelocity.GatherRed(samLinear, uv, 0);
    float4 v1 = texVelocity.GatherGreen(samLinear, uv, 0);
    return float2(dot(v0,(float4)1), dot(v1, (float4)1));
}

[numthreads(NUMTHREADS, NUMTHREADS, 1)]
void main(uint3 threadID : SV_DispatchThreadID)
{
    float2 uv = (float2)threadID.xy * screenInvSize * 2.0;
    float depth = sampleDepth(texDepthNormal, uv);
    float2 velocity = sampleVelocity(uv);

    float2 t = uv*float2(2,-2) + float2(-1,1);
    float4 screenSpacePosition1 = float4(t.x, t.y, depth, 1);
    float4 worldPos1 = mul(screenSpacePosition1, minvvp1);
    worldPos1 /= worldPos1.w;
    float4 screenSpacePosition0 = mul(worldPos1, mvp0);
    screenSpacePosition0 /= screenSpacePosition0.w;

    velocity += (screenSpacePosition1.xy-screenSpacePosition0.xy);

    texFullVelocity[threadID.xy] = velocity;
}
