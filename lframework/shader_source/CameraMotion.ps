#include "Common.ps"

struct VSOutput
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};

Texture2D texDepth : register(t0);

float2 main(VSOutput input) : SV_Target
{
    float depth = texDepth.Sample(samPoint, input.tex).r;

    float2 t = input.tex * float2(2, -2) + float2(-1, 1);
    float4 screenSpacePosition1 = float4(t, depth, 1);

    float4 worldPos1 = mul(screenSpacePosition1, minvvp1);
    worldPos1 /= worldPos1.w;
    float4 screenSpacePosition0 = mul(worldPos1, mvp0);
    screenSpacePosition0 /= screenSpacePosition0.w;

    float2 velocity = (screenSpacePosition1.xy-screenSpacePosition0.xy) * screenSize;

    float mag = length(velocity);
    mag = (mag<0.001)? 0.0 : min(mag, velocityMaxMagnitude)/mag;
    return velocity*mag;
}
