struct GSOutput
{
    float4 position : SV_Position;
    float4 color : COLOR;
    float2 texcoord : TEXCOORD;
    nointerpolation float4 params : PARAMS;
};

Texture2D texColor : register(t0);
SamplerState samLinear : register(s0);

float box(float2 p)
{
    float2 t = abs(p);
    return max(t.x, t.y) - 1.0;
}

float circle(float2 p)
{
    return length(p) - 1.0;
}

float diamond(float2 p)
{
    return abs(p.x) + abs(p.y) - 1.0;
}

float roundbox(float2 p)
{
    float2 t = pow(abs(p), float2(4,4));
    return t.x + t.y - 1.0;
}

float4 main(GSOutput input) : SV_Target
{
    int type = asint(input.params.x);
    float d;
    if(0 == type){
        d = box(input.texcoord);

    }else if(1==type){
        d = circle(input.texcoord);

    }else if(2 == type){
        d = diamond(input.texcoord);
    }
    float shape = (1-smoothstep(-0.001,0.0,d));
    float edge = smoothstep(-0.28,-0.1,d);
    d = edge*shape+(1-step(-0.18, d))*0.7;
    return float4(d,d,d,shape) * input.color;
}
