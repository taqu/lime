#include "Common.scs"

Texture2D<float2> texVelocity : register(t0);
RWTexture2D<float> texOut : register(u0);

float2 sampleVelocity(int2 location)
{
    return abs(texVelocity[location]);
}

[numthreads(NUMTHREADS, NUMTHREADS, 1)]
void main(uint3 threadID : SV_DispatchThreadID)
{
    //CHECKSIZE_RETURN(threadID, texOut);

    int2 origin = threadID.xy;
    float2 centerVelocity = abs(texVelocity[origin]);

    float v = dot(centerVelocity,centerVelocity);
    v += dot(centerVelocity, sampleVelocity(origin+int2(-1,-1)));
    v += dot(centerVelocity, sampleVelocity(origin+int2( 0,-1)));
    v += dot(centerVelocity, sampleVelocity(origin+int2( 1,-1)));
    v += dot(centerVelocity, sampleVelocity(origin+int2(-1, 0)));
    //v += dot(centerVelocity, sampleVelocity(origin+int2( 0, 0)));
    v += dot(centerVelocity, sampleVelocity(origin+int2( 1, 0)));
    v += dot(centerVelocity, sampleVelocity(origin+int2(-1, 1)));
    v += dot(centerVelocity, sampleVelocity(origin+int2( 0, 1)));
    v += dot(centerVelocity, sampleVelocity(origin+int2( 1, 1)));

    texOut[origin] = v/9.0;
}
