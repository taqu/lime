#include "DoF.inc"
Texture2D<float4> texColor0 : register(t0);
Texture2D<float4> texColor1 : register(t1);
Texture2D<float2> texDepthCoC : register(t2);
SamplerState samPoint : register(s0);

cbuffer ConstantBuffer0 : register(b0)
{
    float bleedingBias;
    float bleedingScale;
    float reserved0;
    float reserved1;
    float4 offsets[NumBokehSamples/2];
}

struct VSOutput
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};

float4 main(VSOutput input) : SV_Target
{
    float4 color = dofFilter(texColor0, texDepthCoC, samPoint, input.tex, bleedingBias, bleedingScale, offsets);

    return min(color, texColor1.SampleLevel(samPoint, input.tex, 0));
    //return texColor0.SampleLevel(samPoint, input.tex, 0);
}
