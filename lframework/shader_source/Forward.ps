#include "Common.ps"

struct VSOutput
{
    float4 position : SV_POSITION;
    float3 normal : TEXCOORD0;
    float3 worldPos : TEXCOORD1;
    float3 viewPos : TEXCOORD2;
};

float4 main(VSOutput input) : SV_TARGET0
{
    float4 albedo = diffuse;

    float3 L = dlDir.xyz;
    float3 N = normalize(input.normal);
    float3 V = normalize(cameraPos.xyz - input.worldPos.xyz);
    float roughness = specular.w;
    float metalic = shadow.w;
    float ambientOcclusion = 1.0;

    EnvironmentLight envLight;
    envLight.diffuse_ = irradianceDiffuse(texIrradiance, samLinear, N);
    envLight.specular_ = radianceSpecular(texRadiance, samLinear, N, V, roughness, specularMapMipLevels);

    float4 color;
    color.rgb = lightSurface(N, V, L, dlColor.xyz, albedo.xyz, roughness, metalic, ambientOcclusion, envLight);
    color.a = albedo.w;
    return color;
}
