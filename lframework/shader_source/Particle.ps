#include "Common.ps"

cbuffer ParticleConstant : register(b4)
{
    float depthDelta;
    float3 reserved;
}

struct GSOutput
{
    float4 position0 : SV_Position;
    float4 color : COLOR;
    float2 texcoord : TEXCOORD0;
    float4 position : TEXCOORD1;
};

float4 main(GSOutput input) : SV_Target
{
    float3 position = input.position.xyz/input.position.w;
    float2 screen = position.xy*float2(0.5,-0.5) + 0.5;
    float depth = linearZToDistance(texLinearDepth.Sample(samLinear, screen).r, linearZParam);
    float particleDepth = toDistance(position.z, linearZParam);
    float transparent = smoothstep(0, depthDelta, depth-particleDepth);
    float4 color = input.color * texAlbedo.Sample(samLinear, input.texcoord.xy);
    color.a *= transparent;
    return color;
}
