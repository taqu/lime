#include "Common.scs"

cbuffer ReconsturctConstant : register(b0)
{
    float2 invSize;
    float lowFreqThreshold;
    float hiFreqThreshold;
    float tonemapExposure;
    float bloomThreshold;
    float bloomFactor;
    float reserved0;
}

Texture2D texIn : register(t0);
SamplerState samPoint : register(s0);
SamplerState samLinear : register(s1);
RWTexture2D<float4> texOut : register(u0);


[numthreads(NUMTHREADS, NUMTHREADS, 1)]
void main(uint3 threadID : SV_DispatchThreadID)
{
    int width, height;
    texOut.GetDimensions(width, height);
    float2 texcoord = threadID.xy/float2(width, height);
    float4 color = texIn.SampleLevel(samLinear, texcoord, 0);
    float luminance = RGBToLum(color);

    color.rgb = (bloomThreshold<=luminance)? simpleToneMap(color.rgb, luminance) : 0;
    texOut[threadID.xy] = color;
}
